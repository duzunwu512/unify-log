# https://www.cnblogs.com/xiohao/p/11778233.html
# Spring Boot 项目 application.properties配置说明

# 服务器HTTP端口。
server.port= 8080
# 主调度程序servlet的路径。
server.servlet.context-path=/log

logging.config=classpath:logback-dev.xml
server.session.timeout=1800
server.max-http-header-size=20971520

#mongodb================
spring.data.mongodb.uri=mongodb://etraveler:etravelpwd@10.3.41.132:27017/etravel

# \u914D\u7F6E\u8FD9\u4E2A\u503C\u5C31\u53EF\u4EE5\u683C\u5F0F\u5316\u65F6\u95F4
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

log.admin.userName=admin
log.admin.password=123456

logging.pattern.dateformat: yyyy-MM-dd HH:mm:ss.SSS,Europe/Minsk
logging.level.root: INFO
logging.level.org.springframework.data.convert.CustomConversions: ERROR

#kafka redis
#log.send.channel=redis
# mongodb elasticsearch hbase
log.db.type=hbase

####################MongoDB##############################
spring.mongodb.address=localhost:27017
# 设置集群所需副本集名称
#spring.mongodb.replica-set=rs0
spring.mongodb.database=demo
spring.mongodb.username=root
spring.mongodb.password=abc123
spring.mongodb.authentication-database=admin

# Configure spring.data.mongodbDB Pool
# 每个主机的最小连接数
spring.mongodb.min-connections-per-host=10
spring.mongodb.max-connections-per-host=100
# 设置允许阻塞等待连接的线程数
spring.mongodb.threads-allowed-to-block-for-connection-multiplier=5
# 设置服务器选择超时：定义客户端在抛出异常之前等待服务器返回成功的时间 （毫秒）
spring.mongodb.server-selection-timeout=30000
# 设置线程阻塞等待连接的最大等待时间（毫秒）
spring.mongodb.max-wait-time=120000
# 设置连接的最大空闲时间
spring.mongodb.max-connection-idle-time=0
# 设置连接的最长成名周期
spring.mongodb.max-connection-life-time=0
# 设置连接超时时间（三次握手所需要的时间）
spring.mongodb.connect-timeout=10000
# 设置套接字超时时间（等待数据所需要的时间）
spring.mongodb.socket-timeout=0
# 设置套接字是否保持长连接
spring.mongodb.socket-keep-alive=true
# 是否使用ssl连接
spring.mongodb.ssl-enabled=false
# 定义是否使用无效的主机名，默认为false
spring.mongodb.ssl-invalid-host-name-allowed=false
# 设置框架是否使用MBeans，jdk5以下使用
spring.mongodb.always-use-m-beans=false
# 设置用于集群心跳的连接套接字超时时间
spring.mongodb.heartbeat-socket-timeout=20000
# 设置用于集群心跳的连接超时时间
spring.mongodb.heartbeat-connect-timeout=20000
# 设置心跳频率，驱动器确定集群中每个服务器当前状态的频率，默认10000（毫秒）
spring.mongodb.min-heartbeat-frequency=500
# 设置最小心跳频率，如果驱动器必须要检查服务器服务器的状态，则最少会等待这个时间，默认500（毫秒）
spring.mongodb.heartbeat-frequency=10000
# 设置可接受延时差
spring.mongodb.local-threshold=15

##############################################################
#hbase.zookeeper.quorum=uathadoop1:2181,uathadoop2:2181,uathadoop3:2181
#hbase.zookeeper.quorum=uathadoop1:2181,uathadoop2:2181,uathadoop3:2181
#hbase.zookeeper.property.clientPort=2181
#zookeeper.znode.parent=/hbase

hbase.zookeeper.znode.parent=/hbase
hbase.zookeeper.quorum=uathadoop1,uathadoop2,uathadoop3
hbase.zookeeper.property.clientPort=2181
hbase.hadoop.home.dir=D:\\WORK\\bigdata\\hadoop-common-2.2.0-bin-master

#spring.data.hbase.quorum=uathadoop1:2181,uathadoop2:2181,uathadoop3:2181
#spring.data.hbase.rootDir=/
#spring.data.hbase.nodeParent=/hbase


##########################ELASTICSEARCH#######################################
spring.elasticsearch.rest.uris=localhost:9200

###########################MQ####################################


#kafka配置
# 消费者
spring.kafka.consumer.group-id=foo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=localhost:9092
# 生产者
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



#kafka.consumer.zookeeper.connect=10.93.21.21:2181
kafka.servers=localhost:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=6000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.group.id=test
kafka.consumer.concurrency=2

kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960


#============================redis===========================
spring.redis.host=localhost
spring.redis.port=6379
#spring.redis.password=root #根据需要
# 连接超时时间（毫秒）
spring.redis.timeout=300000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.shutdown-timeout=200ms

#-----------------------------------

#spring.kafka.bootstrap-servers=localhost:9092

#spring.kafka.producer.retries=0
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432

#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
#spring.kafka.consumer.group-id=test-consumer-group

#spring.kafka.consumer.auto-offset-reset=earliest
##spring.kafka.consumer.auto-offset-reset=latest

#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100

#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#-------


#kafka默认消费者配置
#spring.kafka.consumer.bootstrap-servers=192.168.0.15:9092
#spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.auto-offset-reset=earliest
#kafka默认生产者配置
#spring.kafka.producer.bootstrap-servers=192.168.0.15:9092
#spring.kafka.producer.acks=-1
#spring.kafka.client-id=kafka-producer
#spring.kafka.producer.batch-size=5